---
description: Motia Cron Steps for scheduled tasks
globs: 
alwaysApply: false
---
# Cron Steps Guide

Cron Steps enable scheduled task execution using cron expressions.

## Basic Cron Step

```typescript
import { CronConfig, Handlers } from 'motia'

export const config: CronConfig = {
  type: 'cron',
  name: 'PeriodicJob',
  cron: '0 * * * *', // Every hour
  emits: ['cron.executed'],
  flows: ['scheduled-tasks']
}

export const handler: Handlers['PeriodicJob'] = async ({ emit, logger }) => {
  await emit({
    topic: 'cron.executed',
    data: { timestamp: new Date().toISOString() }
  })
  
  logger.info('Cron job executed')
}
```

## Python Cron Step

```python
config = {
    "type": "cron",
    "name": "PeriodicJob",
    "cron": "0 * * * *",
    "emits": ["cron.executed"],
    "flows": ["scheduled-tasks"]
}

async def handler(context):
    await context.emit({
        "topic": "cron.executed",
        "data": { "timestamp": context.utils.dates.now().isoformat() }
    })
```

## Ruby Cron Step

```ruby
def config
  {
    type: 'cron',
    name: 'PeriodicJob',
    cron: '0 * * * *',
    emits: ['cron.executed'],
    flows: ['scheduled-tasks']
  }
end

def handler(context)
  context.emit({
    topic: 'cron.executed',
    data: { timestamp: Time.now.utc.iso8601 }
  })
end
```

## Common Schedules

| Expression | Description |
|------------|-------------|
| `*/5 * * * *` | Every 5 minutes |
| `0 * * * *` | Every hour |
| `0 0 * * *` | Daily at midnight |
| `0 0 * * 0` | Weekly on Sunday |
| `0 0 1 * *` | Monthly on 1st |

## State Between Runs

```typescript
export const handler: Handlers['StatefulCron'] = async ({ state, emit }) => {
  const lastRun = await state.get('cron', 'lastRun')
  const currentTime = new Date().toISOString()
  
  await state.set('cron', 'lastRun', currentTime)
  
  await emit({
    topic: 'cron.executed',
    data: { lastRun, currentTime }
  })
}
```
